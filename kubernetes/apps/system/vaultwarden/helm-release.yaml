---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault
  namespace: system
spec:
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  values:
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8
        env:
          - name: POSTGRES_HOST
            value: postgres-rw.database.svc
          - name: POSTGRES_DB
            value: vaultwarden
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-vaultwarden
                key: postgres_superuser_pw
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-vaultwarden
                key: postgres_user
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-vaultwarden
                key: postgres_password
    image:
      repository: vaultwarden/server
      tag: 1.29.2
    env:
      DATA_FOLDER: "data"
      ICON_CACHE_FOLDER: "data/icon_cache"
      ATTACHMENTS_FOLDER: "data/attachments"
      DOMAIN: "https://vault.${SECRET_DOMAIN}"
      TZ: "UTC"
      SIGNUPS_ALLOWED: "false"
      WEBSOCKET_ENABLED: "true"
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_PORT: 3012
      SMTP_HOST: protonmail-bridge-smtp.mail.svc
      SMTP_FROM: postmaster@${SECRET_DOMAIN}
      SMTP_FROM_NAME: vaultwarden
      SMTP_PORT: 25
      SMTP_SECURITY: "off"
    envFrom:
      - secretRef:
          name: &secret vaultwarden
    podAnnotations:
      secret.reloader.stakater.com/reload: *secret
      backup.velero.io/backup-volumes: data
    service:
      main:
        ports:
          http:
            port: &port 80
          websocket:
            enabled: true
            port: &websocket-port 3012
    persistence:
      data:
        enabled: true
        existingClaim: vaultwarden-data
        mountPath: /data
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress.${SECRET_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *port
              - path: /notifications/hub/negotiate
                pathType: Prefix
                service:
                  port: *port
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: *websocket-port
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert-tls
      admin:
        enabled: true
        ingressClassName: nginx-internal
        hosts:
          - host: "{{ .Release.Name }}-admin.${SECRET_DOMAIN}"
            paths:
              - path: /admin
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert-tls
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 2Gi