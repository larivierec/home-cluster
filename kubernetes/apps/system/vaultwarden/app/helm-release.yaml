---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vault
  namespace: system
spec:
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      vault:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3
            envFrom: &envFrom
              - secretRef:
                  name: postgres-vaultwarden
        containers:
          app:
            image:
              repository: vaultwarden/server
              tag: 1.31.0
            env:
              DATA_FOLDER: "data"
              ICON_CACHE_FOLDER: "data/icon_cache"
              ATTACHMENTS_FOLDER: "data/attachments"
              DOMAIN: "https://vault.garb.dev"
              TZ: "UTC"
              SIGNUPS_ALLOWED: "false"
              WEBSOCKET_ENABLED: "true"
              WEBSOCKET_ADDRESS: 0.0.0.0
              WEBSOCKET_PORT: 3012
            envFrom:
              - secretRef:
                  name: &secret vaultwarden
        pod:
          annotations:
            secret.reloader.stakater.com/reload: *secret
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 80
          websocket:
            enabled: true
            port: &websocket-port 3012
    persistence:
      data:
        enabled: true
        existingClaim: vaultwarden-0
        globalMounts:
          - path: /data
    route:
      app:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: dummy
          external-dns.alpha.kubernetes.io/hostname: &host "{{ .Release.Name }}.garb.dev"
          external-dns.alpha.kubernetes.io/ttl: "120"
        parentRefs:
          - name: envoy-external
            namespace: networking
            sectionName: https
        hostnames:
          - *host
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - port: *port
                name: *app
          - matches:
              - path:
                  type: PathPrefix
                  value: /notifications/hub/negotiate
            backendRefs:
              - port: *port
                name: *app
          - matches:
              - path:
                  type: PathPrefix
                  value: /notifications/hub
            backendRefs:
              - port: *websocket-port
                name: *app
      admin:
        enabled: true
        parentRefs:
          - name: envoy-internal
            namespace: networking
        hostnames:
          - "{{ .Release.Name }}-admin.garb.dev"
        rules:
          - backendRefs:
              - port: *port
                name: *app
            matches:
              - path:
                  type: PathPrefix
                  value: /admin
