---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: thanos
      version: 1.17.1
      sourceRef:
        kind: HelmRepository
        name: stevehipwell
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: local-path-provisioner
      namespace: system
  values:
    objstoreConfig:
      type: s3
      config:
        bucket: thanos
        endpoint: "minio.system.svc.cluster.local:9000"
        region: us-east-1
        insecure: true
    additionalEndpoints:
      - dnssrv+_grpc._tcp.prometheus-kube-prometheus-thanos-discovery.monitoring.svc.cluster.local
    additionalReplicaLabels: ["__replica__"]
    serviceMonitor:
      enabled: true
    compactor:
      enabled: true
      extraArgs:
        - --compact.concurrency=4
        - --delete-delay=30m
        - --retention.resolution-raw=14d
        - --retention.resolution-5m=30d
        - --retention.resolution-1h=60d
      persistence: &persistence
        enabled: true
        storageClass: local-hostpath
        size: 10Gi
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
    query:
      enabled: true
      replicas: 2
      extraArgs: ["--alert.query-url=https://thanos.garb.dev"]
      additionalStores: ["thanos-svc.garb.dev:10901"]
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
    queryFrontend:
      enabled: true
      replicas: 2
      extraEnv: &extraEnv
        - name: THANOS_CACHE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: &configMap thanos-cache-configmap
              key: cache.yaml
      extraArgs: ["--query-range.response-cache-config=$(THANOS_CACHE_CONFIG)"]
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
          - &host thanos-query-frontend.garb.dev
        tls:
          - hosts:
              - *host
      podAnnotations: &podAnnotations
        configmap.reloader.stakater.com/reload: *configMap
    rule:
      enabled: true
      replicas: 2
      extraArgs: ["--web.prefix-header=X-Forwarded-Prefix"]
      alertmanagersConfig:
        value: |-
          alertmanagers:
            - api_version: v2
              static_configs:
                - dnssrv+_http-web._tcp.alertmanager-operated.monitoring.svc.cluster.local
      rules:
        value: |-
          groups:
          - name: PrometheusWatcher
            rules:
              - alert: PrometheusDown
                annotations:
                  summary: A Prometheus has disappeared from Prometheus target discovery
                expr: absent(up{job="prometheus-kube-prometheus-operator"})
                for: 5m
                labels:
                  severity: critical
    storeGateway:
      replicas: 2
      extraEnv: *extraEnv
      extraArgs: ["--index-cache.config=$(THANOS_CACHE_CONFIG)"]
      persistence: *persistence
      podAnnotations: *podAnnotations
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
  valuesFrom:
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-credentials
      valuesKey: access_key
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-credentials
      valuesKey: secret_key
