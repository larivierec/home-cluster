---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      plex:
        strategy: Recreate
        pod:
          nodeSelector:
            node-role.kubernetes.io/worker: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            runAsNonRoot: true
            supplementalGroups:
              - 44 # video group
              - 105 # debian render group
              - 109 # ubuntu render group
          # runtimeClassName: nvidia
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex-beta
              tag: 1.40.5.8761-c64418528@sha256:95ac94417e3a90ed12078a202f95e4d00873bdfe2d36577b66b3b0c07f10ca12
            env:
              TZ: "UTC"
              ADVERTISE_IP: "https://192.168.40.4:32400,https://plex.garb.dev:443"
              # NVIDIA_DRIVER_CAPABILITIES: all
              # NVIDIA_VISIBLE_DEVICES: all
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 1000m
                memory: 2Gi
              limits:
                memory: 16Gi
                gpu.intel.com/i915: 1
                # nvidia.com/gpu: 1
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
    service:
      app:
        controller: *app
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          coredns.io/hostname: plex.garb.dev
          lbipam.cilium.io/ips: 192.168.40.4
        ports:
          http:
            port: &port 32400
    # ingress:
    #   app:
    #     enabled: true
    #     className: external
    #     annotations:
    #       external-dns.alpha.kubernetes.io/target: ingress.garb.dev
    #       external-dns.alpha.kubernetes.io/hostname: plex.garb.dev
    #       nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #     hosts:
    #       - host: &host "plex.garb.dev"
    #         paths:
    #           - path: /
    #             service:
    #               identifier: app
    #               port: http
    #     tls:
    #       - hosts:
    #           - *host
    #         secretName: wildcard-cert-tls
    route:
      app:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: dummy
          external-dns.alpha.kubernetes.io/hostname: plex-cilium.garb.dev
          external-dns.alpha.kubernetes.io/ttl: "120"
        parentRefs:
          - name: cilium-external
            namespace: networking
            sectionName: https
        hostnames:
          - "plex-cilium.garb.dev"
        rules:
          - backendRefs:
              - port: *port
                name: *app
            timeouts:
              backendRequest: 3m
      envoy:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: dummy
          external-dns.alpha.kubernetes.io/hostname: plex.garb.dev
          external-dns.alpha.kubernetes.io/ttl: "120"
        parentRefs:
          - name: envoy-external
            namespace: networking
            sectionName: https
        hostnames:
          - "plex.garb.dev"
        rules:
          - backendRefs:
              - port: *port
                name: *app
    persistence:
      config:
        enabled: true
        existingClaim: plex-0
      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: 192.168.1.3
            path: /volume2/media-sp2
        globalMounts:
          - path: /media
      backup:
        enabled: true
        existingClaim: plex-backup
        globalMounts:
          - path: /config/backup
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
