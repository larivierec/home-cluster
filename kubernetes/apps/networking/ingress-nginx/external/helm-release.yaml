---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-external
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.11.0
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controller:
      replicaCount: 2
      allowSnippetAnnotations: true
      config:
        use-forwarded-headers: "true"
        forwarded-for-header: "CF-Connecting-IP"
        use-gzip: "true"
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        keep-alive: 120
        keep-alive-requests: 10000
        proxy-body-size: "100M"
        plugins: "strip-port-from-host"
      extraVolumes:
        - name: strip-port-from-host-plugin
          configMap:
            name: strip-port-from-host
      extraVolumeMounts:
        - name: strip-port-from-host-plugin
          mountPath: /etc/nginx/lua/plugins/strip-port-from-host
      ingressClass: external
      ingressClassByName: true
      ingressClassResource:
        name: external
        enabled: true
        default: true
        controllerValue: "k8s.io/ingress-nginx-external"
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values:
                - external
      service:
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          external-dns.alpha.kubernetes.io/hostname: ingress.garb.dev
          io.cilium/lb-ipam-ips: 192.168.40.3
      extraArgs:
        default-ssl-certificate: networking/wildcard-cert-tls
      publishService:
        enabled: true
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
      resources:
        requests:
          cpu: 100m
          memory: 90Mi
      enableMimalloc: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - ingress-nginx
                topologyKey: "kubernetes.io/hostname"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
        prometheusRule:
          enabled: true
          additionalLabels: {}
          namespace: ""
          rules:
            - alert: NGINXConfigFailed
              expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
              for: 1s
              labels:
                severity: critical
              annotations:
                description: bad ingress config - nginx config test failed
                summary: uninstall the latest ingress changes to allow config reloads to resume
            - alert: NGINXCertificateExpiry
              expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
              for: 1s
              labels:
                severity: critical
              annotations:
                description: ssl certificate(s) will expire in less then a week
                summary: renew expiring certificates to avoid downtime
