---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: nginx.rules
  namespace: networking
spec:
  groups:
    - name: nginx.rules
      rules:
        - alert: NginxHighHttp4xxErrorRate
          expr: sum(rate(nginx_ingress_controller_requests{status=~"^4.."}[1m])) / sum(rate(nginx_ingress_controller_requests[1m])) * 100 > 5
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: Nginx high HTTP 4xx error rate (instance {{ $labels.instance }})
            description: "Too many HTTP requests with status 4xx (> 5%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        - alert: NginxHighHttp5xxErrorRate
          expr: sum(rate(nginx_ingress_controller_requests{status=~"^5.."}[1m])) / sum(rate(nginx_ingress_controller_requests[1m])) * 100 > 5
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: Nginx high HTTP 5xx error rate (instance {{ $labels.instance }})
            description: "Too many HTTP requests with status 5xx (> 5%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        - alert: NginxLatencyHigh
          expr: histogram_quantile(0.99, sum(rate(nginx_http_request_duration_seconds_bucket[2m])) by (host, node)) > 3
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Nginx latency high (instance {{ $labels.instance }})
            description: "Nginx p99 latency is higher than 3 seconds\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/monitoring.coreos.com/prometheusrule_v1.json
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cert-manager.rules
  namespace: cert-manager
spec:
  groups:
    - name: cert-manager
      rules:
        - alert: CertManagerAbsent
          expr: |
            absent(up{job="cert-manager"})
          for: 15m
          labels:
            severity: critical
          annotations:
            description:
              "New certificates will not be able to be minted, and existing
              ones can't be renewed until cert-manager is back."
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagerabsent
            summary: "Cert Manager has dissapeared from Prometheus service discovery."
    - name: certificates
      rules:
        - alert: CertManagerCertExpirySoon
          expr: |
            avg by (exported_namespace, namespace, name) (
            certmanager_certificate_expiration_timestamp_seconds - time())
              < (21 * 24 * 3600)
          for: 15m
          labels:
            severity: warning
          annotations:
            description:
              "The domain that this cert covers will be unavailable after
              {{ $value | humanizeDuration }}. Clients using endpoints that this cert
              protects will start to fail in {{ $value | humanizeDuration }}."
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagercertexpirysoon
            summary:
              "The cert {{ $labels.name }} is {{ $value | humanizeDuration }}
              from expiry, it should have renewed over a week ago."
        - alert: CertManagerCertNotReady
          expr: |
            max by (name, exported_namespace, namespace, condition) (
            certmanager_certificate_ready_status{condition!="True"} == 1)
          for: 15m
          labels:
            severity: critical
          annotations:
            description:
              "This certificate has not been ready to serve traffic for at least
              15m. If the cert is being renewed or there is another valid cert, the ingress
              controller _may_ be able to serve that instead."
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagercertnotready
            summary: "The cert {{ $labels.name }} is not ready to serve traffic."
        - alert: CertManagerHittingRateLimits
          expr: |
            sum by (host) (rate(certmanager_http_acme_client_request_count{status="429"}[5m]))
              > 0
          for: 15m
          labels:
            severity: critical
          annotations:
            description:
              "Depending on the rate limit, cert-manager may be unable to generate
              certificates for up to a week."
            runbook_url: https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagerhittingratelimits
            summary: "Cert manager hitting LetsEncrypt rate limits."
