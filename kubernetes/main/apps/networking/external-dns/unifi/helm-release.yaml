---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.3.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app external-dns-unifi
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      external-dns-unifi:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret external-dns-unifi-secret
        containers:
          app:
            image:
              repository: registry.k8s.io/external-dns/external-dns
              tag: v0.19.0@sha256:f76114338104264f655b23138444481b20bb9d6125742c7240fac25936fe164e
            args:
              - --provider=webhook
              - --domain-filter=garb.dev
              - --source=service
              - --source=ingress
              - --source=gateway-httproute
              - --source=gateway-tcproute
              - --source=gateway-udproute
              - --txt-owner-id=unifi
              - --txt-prefix=k8s.main.
              - --registry=txt
              - --policy=sync
              - --interval=1m
              - --log-format=text
              - --log-level=info
              - --managed-record-types=A
              - --managed-record-types=CNAME
              - --managed-record-types=SRV
              - --metrics-address=:7979
              - --ignore-ingress-tls-spec
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 7979
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
          webhook:
            image:
              repository: ghcr.io/kashalls/external-dns-unifi-webhook
              tag: v0.7.0@sha256:a5503c1c61e3a8f6d66a0172fca6fb9affbe1f527ae6360ccf5ff5f0bf181c6e
            env:
              UNIFI_HOST: https://192.168.1.1
              UNIFI_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: UNIFI_ADMIN_API_KEY
              LOG_LEVEL: "debug"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &webhook 8080
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *webhook
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: false
        serviceAccount:
          identifier: *app
    serviceAccount:
      external-dns-unifi: {}
    rbac:
      bindings:
        external-dns-unifi:
          roleRef:
            kind: ClusterRole
            name: external-dns-unifi
          subjects:
            - identifier: *app
          type: ClusterRoleBinding
      roles:
        external-dns-unifi:
          rules:
            - apiGroups: [""]
              resources: ["nodes"]
              verbs: ["list", "watch"]
            - apiGroups: [""]
              resources: ["pods", "services", "endpoints", "namespaces"]
              verbs: ["get", "watch", "list"]
            - apiGroups: ["extensions", "networking.k8s.io"]
              resources: ["ingresses"]
              verbs: ["get", "watch", "list"]
            - apiGroups: ["ingresses.networking.k8s.io"]
              resources: ["*"]
              verbs: ["watch", "list"]
            - apiGroups: ["gateway.networking.k8s.io"]
              resources: ["*"]
              verbs: ["watch", "list"]
            - apiGroups: ["externaldns.k8s.io"]
              resources: ["dnsendpoints"]
              verbs: ["get", "watch", "list"]
            - apiGroups: ["externaldns.k8s.io"]
              resources: ["dnsendpoints/status"]
              verbs: ["*"]
            - apiGroups: ["discovery.k8s.io"]
              resources: ["endpointslices"]
              verbs: ["get", "list", "watch"]
          type: ClusterRole
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
      webhook:
        controller: *app
        ports:
          http-webhook:
            port: *webhook
    serviceMonitor:
      app:
        enabled: true
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
