---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app k8s-gateway
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      k8s-gateway:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: *app
        containers:
          app:
            image:
              repository: ghcr.io/k8s-gateway/k8s_gateway
              tag: 1.6.0@sha256:12eaf84047a6aeee831e51a7c553f7fb74cc04408db426376b1eadfb3087b365
            args: ["-conf", "/etc/coredns/Corefile"]
            probes:
              readiness:
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8181
              liveness:
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8080
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 200Mi
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
        serviceAccount:
          identifier: *app
    serviceAccount:
      k8s-gateway: {}
    service:
      app:
        controller: *app
        ports:
          metrics:
            enabled: true
            port: 9153
      dns:
        enabled: true
        controller: *app
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        clusterIP: "10.43.195.229"
        annotations:
          lbipam.cilium.io/ips: 192.168.40.10
        ports:
          dns-tcp:
            enabled: true
            port: 53
            protocol: TCP
            targetPort: 1053
          dns-udp:
            enabled: true
            port: 53
            protocol: UDP
            targetPort: 1053
    serviceMonitor:
      app:
        enabled: true
        serviceName: k8s-gateway-app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 30s
    rbac:
      bindings:
        k8s-gateway:
          roleRef:
            kind: ClusterRole
            name: k8s-gateway
          subjects:
            - identifier: *app
          type: ClusterRoleBinding
      roles:
        k8s-gateway:
          rules:
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - services
                - namespaces
              verbs:
                - list
                - watch
            - apiGroups:
                - extensions
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - list
                - watch
            - apiGroups:
                - gateway.networking.k8s.io
              resources:
                - "*"
              verbs:
                - watch
                - list
            - apiGroups:
                - ingresses.networking.k8s.io
              resources:
                - "*"
              verbs:
                - watch
                - list
            - apiGroups:
                - externaldns.k8s.io
              resources:
                - dnsendpoints
              verbs:
                - get
                - watch
                - list
            - apiGroups:
                - externaldns.k8s.io
              resources:
                - dnsendpoints/status
              verbs:
                - "*"
          type: ClusterRole
    persistence:
      config:
        enabled: true
        type: configMap
        name: *app
        globalMounts:
          - path: /etc/coredns/Corefile
            subPath: Corefile
            readOnly: true
      hosts:
        enabled: true
        type: hostPath
        hostPath: /etc/hosts
        globalMounts:
          - path: /etc/hosts
