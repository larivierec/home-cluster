---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 45.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['alertname','job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: 'discord'
          routes:
            - receiver: "null"
              match:
                alertname: Watchdog
            - receiver: "null"
              match:
                alertname: InfoInhibitor
            - receiver: "discord"
              match:
                severity: 'critical'
              continue: true
        receivers:
          - name: 'null'
          - name: 'discord'
            webhook_configs:
              - url: 'http://alertmanager-discord:9094'
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        hosts:
          - alertmanager.${SECRET_DOMAIN}
        paths:
          - /
        tls:
        - secretName: wildcard-cert-tls
          hosts:
          - "alertmanager.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
    grafana:
      enabled: true
      plugins:
        - "grafana-piechart-panel"
        - "redis-datasource"
      serviceMonitor:
        enabled: true
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: ""
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      additionalDataSources:
        - name: redis-db
          uid: redis-db
          type: redis-datasource
          url: redis://redis-headless.system.svc:6379/
          access: proxy
          orgId: 1
          editable: false
          isDefault: false
          jsonData:
            timeInterval: 30s
      dashboards:
        default:
          blocky:
            gnetId: 13768
            revision: 2
            datasource: Prometheus
          ingress:
            gnetId: 9614
            revision: 1
            datasource: Prometheus
          node_exporter:
            gnetId: 1860
            revision: 27
            datasource: Prometheus
          flux:
            gnetId: 14936
            revision: 1
            datasource: Prometheus
          lidarr:
            url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/lidarr.json
            datasource: Prometheus
          radarr:
            url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
            datasource: Prometheus
          sonarr:
            url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
            datasource: Prometheus
          uptimerobot:
            url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
            datasource: Prometheus
          redis:
            gnetId: 12776
            revision: 2
            datasource: redis-db

      env:
        GF_PANELS_DISABLE_SANITIZE_HTML: true

      adminPassword: ${SECRET_GRAFANA_PASSWORD}
      ingress:
        enabled: true
        hosts:
          - &hostGrafana "grafana.${SECRET_DOMAIN}"
        path: /
        tls:
          - secretName: wildcard-cert-tls
            hosts: 
              - *hostGrafana
        ingressClassName: nginx
    kubelet:
      enabled: true
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.1.9
        - 192.168.1.7
        - 192.168.1.4
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.1.9
        - 192.168.1.7
        - 192.168.1.4
      service:
        port: 10259
        targetPort: 10259
      serviceMonitor:
        https: true
        insecureSkipVerify: true
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.1.9
        - 192.168.1.7
        - 192.168.1.4
    kubeEtcd:
      enabled: false
    prometheusOperator:
      tls:
        enabled: false
      admissionWebhooks:
        enabled: false
    prometheus:
      enabled: true
      ingress:
        enabled: true
        hosts:
          - &hostPrometheus "prometheus.${SECRET_DOMAIN}"
        paths:
          - /
        tls:
          - secretName: wildcard-cert-tls
            hosts:
              - *hostPrometheus
        ingressClassName: "nginx"
      additionalDatasources:
        - name: blocky-redis
          type: standalone
          url: redis://blocky-redis-headless.networking.svc:6379
      prometheusSpec:
        replicas: 2
        podAntiAffinity: hard
        retention: 2d
        replicaExternalLabelNameClear: false
        prometheusExternalLabelNameClear: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
