{
  "extends": [
    "github>larivierec/home-cluster//.github/renovate/autoMerge",
    ":enableRenovate",
    ":dependencyDashboard",
    ":disableRateLimiting",
    ":semanticCommits",
    "config:base"
  ],
  "username": "bruu-bot[bot]",
  "repositories": ["larivierec/home-cluster"],
  "platform": "github",
  "timezone": "America/New_York",
  "suppressNotifications": ["prIgnoreNotification"],
  "dependencyDashboardTitle": "Renovate Dashboard",
  "rebaseWhen": "conflicted",
  "assignees": ["@larivierec"],
  "requireConfig": false,
  "onboarding": false,
  "gitAuthor": "bruuu-bot <22551228+bruu-bot[bot]@users.noreply.github.com>",
  "helm-values": {
    fileMatch: ["cluster/.+/helm-release\\.yaml$"],
  },
  "kubernetes": {
    fileMatch: ["cluster/.+\\.yaml$"],
    ignorePaths: ["cluster/base/"],
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process cert-manager CRD's
    {
      fileMatch: ["cluster/crds/cert-manager/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
      ],
      datasourceTemplate: "helm",
    },
    // regexManager to read and process kube-prometheus-stack CRD's
    {
      fileMatch: ["cluster/crds/kube-prometheus-stack/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
    // regexManager to read and process Rook-Ceph CRD's
    {
      fileMatch: ["cluster/crds/rook-ceph/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: (?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
  ],
  "packageRules": [
    // Setup datasources
    {
      matchDatasources: ["helm"],
      semanticCommitScope: "charts",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "to {{{newValue}}}",
      separateMinorPatch: true,
      ignoreDeprecated: true,
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(charts)!: ",
      labels: ["renovate/helm", "dep/major"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      labels: ["renovate/helm", "dep/minor"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      labels: ["renovate/helm", "dep/patch"],
    },
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "matchUpdateTypes": ["major", "minor", "patch"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(images)!: ",
      "labels": ["renovate/image", "dep/major"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "labels": ["renovate/image", "dep/minor"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "labels": ["renovate/image", "dep/patch"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex"
      ]
    },
  ],
}

