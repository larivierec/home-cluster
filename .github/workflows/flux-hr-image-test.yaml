# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
name: "Flux Image Test"
on:
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  secret-retrieval:
    name: Retrieve Secrets
    runs-on: ubuntu-latest
    outputs:
      bot_app_id: ${{ steps.parse-secrets.outputs.bot_app_id }}
      bot_app_private_key: ${{ steps.parse-secrets.outputs.bot_app_private_key }}
    steps:
      - name: Get Secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          secrets: |
            4c93fe22-dd57-4d4d-96b2-b20600132b47 > GH_SECRETS

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Extract Secret Values
        id: parse-secrets
        run: |
          BOT_APP_ID=$(echo "${{ env.GH_SECRETS }}" | jq -r '.["bot_id"]')
          BOT_APP_PRIVATE_KEY_B64=$(echo "${{ env.GH_SECRETS }}" | jq -r '.["bot_pk_b64"]')
          BOT_APP_PRIVATE_KEY=$(echo "$BOT_APP_PRIVATE_KEY_B64" | base64 --decode)

          echo "::add-mask::$BOT_APP_ID"
          echo "::add-mask::$BOT_APP_PRIVATE_KEY"

          echo "bot_app_id=${BOT_APP_ID}"
          echo "bot_app_private_key=${BOT_APP_PRIVATE_KEY}"

  changed-clusters:
    name: Changed Clusters
    runs-on: ubuntu-latest
    needs: secret-retrieval
    outputs:
      matrix: ${{ steps.changed-clusters.outputs.all_changed_and_modified_files }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "${{ needs.secret-retrieval.outputs.bot_app_id }}"
          private-key: "${{ needs.secret-retrieval.outputs.bot_app_private_key }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0

      - name: Get Changed Clusters
        id: changed-clusters
        uses: tj-actions/changed-files@v45
        with:
          files: kubernetes/**
          dir_names: true
          dir_names_max_depth: 2
          matrix: true

      - name: List All Changed Clusters
        run: echo "${{ steps.changed-clusters.outputs.all_changed_and_modified_files }}"

  extract-images:
    name: Extract Images
    runs-on: ubuntu-latest
    needs:
      - secret-retrieval
      - changed-clusters
    permissions:
      pull-requests: write
    strategy:
      matrix:
        paths: ${{ fromJSON(needs.changed-clusters.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    outputs:
      matrix: ${{ steps.extract-images.outputs.images }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "${{ needs.secret-retrieval.outputs.bot_app_id }}"
          private-key: "${{ needs.secret-retrieval.outputs.bot_app_private_key }}"

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Workflow Tools
        shell: bash
        run: brew install jo yq

      - name: Checkout Default Branch
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"
          ref: "${{ github.event.repository.default_branch }}"
          path: default

      - name: Checkout Pull Request Branch
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"
          path: pull

      - name: Gather Images in Default Branch
        uses: docker://ghcr.io/allenporter/flux-local:v6.0.0
        with:
          args: >-
            get cluster
            --path /github/workspace/default/${{ matrix.paths }}/flux
            --enable-images
            --output yaml
            --output-file default.yaml

      - name: Gather Images in Pull Request Branch
        uses: docker://ghcr.io/allenporter/flux-local:v6.0.0
        with:
          args: >-
            get cluster
            --path /github/workspace/pull/${{ matrix.paths }}/flux
            --enable-images
            --output yaml
            --output-file pull.yaml

      - name: Filter Default Branch Results
        shell: bash
        run: |
          yq -r '[.. | .images? | select(. != null)] | flatten | sort | unique | .[]' \
              default.yaml > default.txt

      - name: Filter Pull Request Branch Results
        shell: bash
        run: |
          yq -r '[.. | .images? | select(. != null)] | flatten | sort | unique | .[]' \
              pull.yaml > pull.txt

      - name: Compare Default and Pull Request Images
        id: extract-images
        shell: bash
        run: |
          images=$(jo -a "$(grep -vf default.txt pull.txt)")
          echo "images=${images}" >> $GITHUB_OUTPUT
          echo "${images}"
          echo "### Images" >> $GITHUB_STEP_SUMMARY
          echo "${images}" | jq -r 'to_entries[] | "* \(.value)"' >> $GITHUB_STEP_SUMMARY

  test-images:
    if: ${{ needs.extract-images.outputs.matrix != '[]' }}
    name: Test images
    runs-on: ubuntu-latest
    needs: ["extract-images"]
    strategy:
      matrix:
        images: ${{ fromJSON(needs.extract-images.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Inspect Image
        run: docker manifest inspect ${{ matrix.images }}

  # Summarize matrix https://github.community/t/status-check-for-a-matrix-jobs/127354/7
  test-images-success:
    if: ${{ always() }}
    needs: ["test-images"]
    name: Test Images Successful
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
