---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Terraform: Build OCI artifacts"

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "infrastructure/terraform/**"

jobs:
  changed-files:
    name: Generate matrix for building images
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install jo

      - name: Get changed files
        id: changed-files
        uses: bjw-s-labs/action-changed-files@930cef8463348e168cab7235c47fe95a7a235f65 # v0.3.3
        with:
          include_only_directories: true
          patterns: |
            infrastructure/terraform/**

      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.changed_files }}'

      - name: Store changed projects
        id: set-matrix
        run: |
          CHANGED=${{ steps.changed-files.outputs.changed_files }}

          if [ "$CHANGED" = "[]" ]; then
            echo "No projects changed, defaulting to all projects."
            PROJECTS=$(find infrastructure/terraform -mindepth 1 -maxdepth 1 -type d | jq -R -s -c 'split("\n") | map(select(length > 0))')
          else
            PROJECTS=$(echo "$CHANGED" | jq -R -s -c 'split(" ") | map(select(length > 0))')
          fi

          echo "matrix={\"project\":$PROJECTS}" >> "${GITHUB_OUTPUT}"

  publish:
    runs-on: ubuntu-latest
    needs:
      - changed-files
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install fluxcd/tap/flux

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Strip project path
        id: strip-path
        run: |
          project_path=$(echo "${{ matrix.project }}" | sed 's/^\[//; s/\]$//')
          echo "Project path stripped: $project_path"
          echo "project_path=$project_path" >> "$GITHUB_OUTPUT"

      - name: Publish OCI
        run: |
          flux push artifact "oci://ghcr.io/larivierec/terraform/$(basename "${{ steps.strip-path.outputs.project_path }}"):$(git rev-parse --short HEAD)" \
            --path="./$project_path" \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      - name: Tag OCI
        run: |
          flux tag artifact "oci://ghcr.io/larivierec/terraform/$(basename "${{ steps.strip-path.outputs.project_path }}"):$(git rev-parse --short HEAD)" \
            --tag main
