---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Terraform"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/terraform*
      - infrastructure/terraform/**
  push:
    branches:
      - main
    paths:
      - .github/workflows/terraform*
      - infrastructure/terraform/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  changed-terraform:
    name: Changed Terraform
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get changed files
        id: changed-files
        uses: bjw-s-labs/action-changed-files@1a5aeab1bfa64d0c4e786f501d5a3f1fad4a24da # v0.4.1
        with:
          include_only_directories: true
          patterns: |
            infrastructure/terraform/**

      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.changed_files }}'

      - name: Store changed projects
        id: set-matrix
        run: |
          CHANGED=$(echo '${{ steps.changed-files.outputs.changed_files }}')

          if [ "$CHANGED" = "[]" ]; then
            echo "No projects changed, defaulting to all projects."
            PROJECTS=$(find infrastructure/terraform -mindepth 1 -maxdepth 1 -type d | jq -R -s -c 'split("\n") | map(select(length > 0))')
          else
            PROJECTS=$(echo "$CHANGED" | jq -c '.')
          fi

          echo "matrix={\"paths\":"$PROJECTS"}" >> "${GITHUB_OUTPUT}"
  diff:
    name: Terraform Plan
    runs-on:
      - garb-arc-runner-set
    needs:
      - changed-terraform
    strategy:
      matrix: ${{ fromJSON(needs.changed-terraform.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Strip project path
        id: strip-path
        run: |
          project_path=$(echo "${{ matrix.paths }}" | sed 's/^\[//; s/\]$//')
          safe_name=$(echo "$project_path" | tr '/' '-')
          echo "Project path stripped: $project_path"
          echo "project_path=$project_path" >> "$GITHUB_OUTPUT"
          echo "safe_name=$safe_name" >> "$GITHUB_OUTPUT"

      - name: Get Secrets
        uses: larivierec/sm-action@main
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          parse_json: "true"
          secrets: |
            4c93fe22-dd57-4d4d-96b2-b20600132b47
            95e25c1b-2890-49bf-834b-b206001fc136
            19d75ac1-1526-44c1-b8d3-b20400d83107

      - name: Extract Secret Values
        id: parse-secrets
        run: |
          echo "bot_app_id=$BOT_ID" >> "$GITHUB_OUTPUT"
          echo "bot_app_private_key=$BOT_PK_B64" >> "$GITHUB_OUTPUT"
          echo "age_b64=$KEY" >> "$GITHUB_OUTPUT"
          echo "AWS_ACCESS_KEY_ID=$USER" >> "$GITHUB_ENV"
          echo "AWS_SECRET_ACCESS_KEY=$PASSWORD" >> "$GITHUB_ENV"

      - name: Decode Base64 Securely
        id: decode
        run: |
          private_key=$(echo "${{ steps.parse-secrets.outputs.bot_app_private_key }}" | base64 -d | awk 'BEGIN {ORS="\\n"} {print}' | head -c -2) &> /dev/null
          echo "::add-mask::$private_key"
          echo "private-key=$private_key" >> "$GITHUB_OUTPUT"

          age=$(echo "${{ steps.parse-secrets.outputs.age_b64 }}" | base64 -d | grep '^AGE-SECRET-KEY-')
          echo "::add-mask::$age"
          echo "masked-age=$age" >> "$GITHUB_OUTPUT"

      - name: Create age keys.txt
        run: |
          mkdir -p "$HOME/.config/sops/age"
          echo "${{ steps.decode.outputs.masked-age }}" > "$HOME/.config/sops/age/keys.txt"

      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2
        id: app-token
        with:
          app-id: ${{ steps.parse-secrets.outputs.bot_app_id }}
          private-key: ${{ steps.decode.outputs.private-key }}

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Install node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: 20

      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3

      - name: terraform init
        id: init
        working-directory: ${{ steps.strip-path.outputs.project_path }}
        run: terraform init

      - name: terraform fmt
        id: fmt
        working-directory: ${{ steps.strip-path.outputs.project_path }}
        run: terraform fmt -check
        continue-on-error: true

      - name: terraform validate
        id: validate
        working-directory: ${{ steps.strip-path.outputs.project_path }}
        run: terraform validate -no-color

      - name: terraform plan
        working-directory: ${{ steps.strip-path.outputs.project_path }}
        run: terraform plan -no-color -out .planfile

      - name: Post PR comment
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: borchero/terraform-plan-comment@434458316f8f24dd073cd2561c436cce41dc8f34 # v2.4.1
        with:
          token: ${{ steps.app-token.outputs.token }}
          planfile: .planfile
          terraform-cmd: terraform
          header: "📝 Terraform Plan for ${{ matrix.paths }}"
          working-directory: ${{ steps.strip-path.outputs.project_path }}

      - name: upload planfile
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: plan-${{ steps.strip-path.outputs.safe_name }}
          include-hidden-files: true
          path: ${{ steps.strip-path.outputs.project_path }}/.planfile

      - name: Ensure deletion
        if: always()
        run: |
          rm $HOME/.config/sops/age/keys.txt

  apply:
    name: Terraform Apply
    if: github.event_name != 'pull_request'
    runs-on:
      - garb-arc-runner-set
    needs:
      - changed-terraform
      - diff
    strategy:
      matrix: ${{ fromJSON(needs.changed-terraform.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Get Secrets
        uses: larivierec/sm-action@main
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          parse_json: "true"
          secrets: |
            4c93fe22-dd57-4d4d-96b2-b20600132b47
            95e25c1b-2890-49bf-834b-b206001fc136
            19d75ac1-1526-44c1-b8d3-b20400d83107

      - name: Extract Secret Values
        id: parse-secrets
        run: |
          echo "bot_app_id=$BOT_ID" >> "$GITHUB_OUTPUT"
          echo "bot_app_private_key=$BOT_PK_B64" >> "$GITHUB_OUTPUT"
          echo "age_b64=$KEY" >> "$GITHUB_OUTPUT"
          echo "AWS_ACCESS_KEY_ID=$USER" >> "$GITHUB_ENV"
          echo "AWS_SECRET_ACCESS_KEY=$PASSWORD" >> "$GITHUB_ENV"

      - name: Decode Private Key Securely
        id: decode
        run: |
          private_key=$(echo "${{ steps.parse-secrets.outputs.bot_app_private_key }}" | base64 -d | awk 'BEGIN {ORS="\\n"} {print}' | head -c -2) &> /dev/null
          echo "::add-mask::$private_key"
          echo "private-key=$private_key" >> "$GITHUB_OUTPUT"

          age=$(echo "${{ steps.parse-secrets.outputs.age_b64 }}" | base64 -d | grep '^AGE-SECRET-KEY-')
          echo "::add-mask::$age"
          echo "masked-age=$age" >> "$GITHUB_OUTPUT"

      - name: Create age keys.txt
        run: |
          mkdir -p "$HOME/.config/sops/age"
          echo "${{ steps.decode.outputs.masked-age }}" > "$HOME/.config/sops/age/keys.txt"

      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2
        id: app-token
        with:
          app-id: ${{ steps.parse-secrets.outputs.bot_app_id }}
          private-key: ${{ steps.decode.outputs.private-key }}

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Strip project path
        id: strip-path
        run: |
          project_path=$(echo "${{ matrix.paths }}" | sed 's/^\[//; s/\]$//')
          safe_name=$(echo "$project_path" | tr '/' '-')
          echo "Project path stripped: $project_path"
          echo "project_path=$project_path" >> "$GITHUB_OUTPUT"
          echo "safe_name=$safe_name" >> "$GITHUB_OUTPUT"

      - name: download planfile
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6
        with:
          name: plan-${{ steps.strip-path.outputs.safe_name }}
          path: ${{ steps.strip-path.outputs.project_path }}

      - name: Install node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: 20

      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3

      - name: terraform init
        id: init
        working-directory: ${{ steps.strip-path.outputs.project_path }}
        run: terraform init

      - name: terraform apply
        working-directory: ${{ steps.strip-path.outputs.project_path }}
        run: terraform apply -no-color .planfile

      - name: Ensure deletion
        if: always()
        run: |
          rm $HOME/.config/sops/age/keys.txt
